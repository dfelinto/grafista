doctype html
html
  head
    meta(charset="utf-8")
    meta(name="viewport", content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no")
    link(href="{{ url_for('static', filename='assets/css/nv.d3.min.css') }}", rel="stylesheet", type="text/css")
    link(href="{{ url_for('static', filename='assets/css/simple-grid.min.css') }}", rel="stylesheet", type="text/css")
    script(src="{{ url_for('static', filename='assets/js/d3.min.js') }}")
    script(src="{{ url_for('static', filename='assets/js/nv.d3.min.js') }}")
    script(src="{{ url_for('static', filename='assets/js/utils.js') }}")

    style.
      text {
        font: 12px sans-serif;
      }

      svg {
        display: block;
      }

      html, body, svg {
        margin: 0px;
        padding: 0px;
        height: 100%;
        width: 100%;
      }

      svg.sparkline {
        width: 500px;
        height: 70px;
        font-size: 14px;
        margin-top: -6px;
      }
  body
    .container
      .row
        .col-12
          ul
            li
              a(href="{{ url_for('dashboard') }}") Home
            | {% for serie in series %}
            li
              a(href="{{ url_for('stats_view', name=serie.name) }}") {{ serie.name }}
            | {% endfor %}
    | {% block body %}
    .container
      | {% for serie_row in series | batch(2, '&nbsp;') %}
      .row
        | {% for serie in serie_row %}
        .col-6
          p
            svg(id="{{serie.name}}", class="sparline")
        | {% endfor %}
      | {% endfor %}

    | {% endblock %}
    | {% block footer_scripts %} {% endblock %}

    script.
      function chartCall(serie_name) {
        d3.json('/series/' + serie_name, function(data) {
          nv.addGraph(function () {

            var chart = nv.models.sparklinePlus();
            chart.margin({left: 70})
              .x(function (d, i) {
                  return i
              })
              .showLastValue(true)
              .xTickFormat(function (d) {
                  return d3.time.format('%x')(new Date(data[d].x))
              });

            d3.select('#' + serie_name)
              .datum(parseSamples(data))
              .call(chart);

            return chart;
          });
        });
      }
      {% for serie in series %}
      chartCall("{{ serie.name }}");
      {% endfor %}

